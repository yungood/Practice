#include<iostream>
using namespace std;

/*  깊이 우선 탐색법(DFS - Depth First Search)

	 Q1 > 100원짜리 동전  2개를 차례대로 던질 때 나오는 모든 경우를 출력해보자

	 경우의 수1 : 앞앞
	 경우의 수2 : 앞뒤
	 경우의 수3 : 뒤앞
	 경우의 수4 : 뒤뒤

*/


int num = 2; // 동전개수
int c[2]; // 동전 앞,뒤를 저장


void coin(int n) {
	
	int i;


	//동전을 모두 채운 경우(동전 2개를 차례대로 모두 던졌을때)
	if (n == num) { 
		//현재 동전 상태 출력(앞인지 뒤인지)
		for (i = 0; i < num; i++) {
			if (c[i] == 1) { cout << "앞";}  // 앞 = 1
			else { cout << "뒤"; }  // 뒤 = 2;
		}
		cout << "\n";

		// 출력한 뒤 더 이상 동전을 넣지 않고 리턴
		return;
	}



	/* ★★★ 주의!!!! : i의 범위는 1~2 즉, i=1일떄 코드 실행 후 i=2일때의 코드도 실행해야함 ★★★★★ */
	// 던진 동전이 '앞'인지 '뒤'인지 배열에 저장
	for (i = 1; i <= 2;i++) { // 앞면은 1, 뒷면은 2(차례대로 저장)
		c[n] = i;

		coin(n+1); // 다음 동전 n+1번으로 재귀 호출
	}
}


int main(){

	coin(0);

	return 0;		
}


/*
	명령어 return은 함수 내부에서 사용되어 함수의 실행을 끝내는 역할을 한다.
	
	return; // void형 함수의 종료
	return 반환값; // 반환값이 있는 함수의 종료 및 결과값 반환
*/
