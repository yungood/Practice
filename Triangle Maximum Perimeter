/* Q. n개의 봉이 있다. 봉 i의 길이는 ai 이다. 3개의 봉을 선택해서 가능한 둘레의 길이가 긴 삼각형을 만들려고 한다. 둘레의 길이의 최대 값을 구하라. 
      단, 삼각형을 만들 수 없는 경우에는 0을 답한다.  */
      
      // 제약1. 3 <= n <= 100
      // 제약2. 1 <= ai <= 10^6

#include<iostream>
#include <algorithm>  // max 함수 사용
using namespace std;

#define N 100

int main() {
	
	int n; // 봉의 개수
	int a[N]; // 봉 길이
	int tr_ans = 0; // 삼각형 최대 둘레 값 
  	int tr_len = 0; // 삼각형 둘레 길이
  	int tr_Max = 0; // 가장 긴 봉의 길이
  	int tr_rest = 0;  // 나머지 두 봉의 길이의 합(가장 긴 봉 제외)


	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}

  	// 봉을 중복해서 선택하지 않도록 i < j < k
	for (int i = 0; i < n; i++) {
		for (int j = i + 1; j < n; j++) {
			for (int k = j + 1; k < n; k++) {
				tr_len = a[i] + a[j] + a[k]; // 삼각형 둘레의 길이
				tr_Max = max(a[i], max(a[j], a[k]));  // 가장 긴 봉의 길이 
				tr_rest = tr_len - tr_Max; // 나머지 두 봉의 길이의 합

				if(tr_Max < tr_rest) { // 가장 긴 봉의 길이는 나머지 두 봉의 길이의 합 보다 작아야함(삼각형을 만들 수 있는 조건)
					tr_ans = max(tr_ans, tr_len); // 삼각형 여러 둘레 길이 중에서 최대 값 구하기
				}
			}
		}
	}

	cout << tr_ans << endl;
}
