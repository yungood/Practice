/* 

유형1 : 나누어 떨어지지 않을 때 

ex> 입력받는 수가 5이면 2부터 4까지만 실행하여 소수인지 아닌지 판별한다.
    한번이라도 나누어 떨어지면 소수가 아니다.
    즉, 5가 소수이면 2,3,4 모두 나누어 떨어지지 않는다.

*/

#include<stdio.h>

int main()
{
  int a, i, j;
  
  
  scanf("%d", &a); // 정수형 변수 a에 10진수를 입력받는다.
  
  i = a - 1;
  j = 2;
  
  // 조건이 1이므로 break를 만나기 전까지 {}사이의 문장을 무한 반복한다.
  while(1)
  {
    if(j <= i)
    {
      if(a & j == 0)
      {
        printf("소수아님");
        break;
      }
      else
      {
        j++;
      }
    }
    else
    {
      printf("소수");
      break; 
    }
  }
}



/* 

유형2 : 나누어 떨어질 때 

ex> 입력받는 수가 5이면 2부터 5까지(자기자신)까지 실행하여 소수인지 아닌지 판별한다.
    2,3,4,5 중 자기자신을 만나기 전까지 나누어 떨어지는 곳이 있으면 소수가 아니다.
    자기자신을 만나서 나누어 떨어지면 소수이다.

*/

#include<stdio.h>

int main()
{
  int a, j;
  
  scanf("%d", &a);
  
  j = 2;
  
  while(a%j != 0)
  {
    j++;
    
    if(a==j)
    {
      printf("소수");
    }
    else
    {
      printf("소수아님");
    }
  }
}


/* 

유형3 : 제곱근 이용하기

설명) 어떤 수 X가 소수인지를 판별하려면 X를 2부터 X의 제곱근까지의 숫자로 나누어 떨어지는지 검사하면 된다.

이유) 예를 들어 25가 소수인지를 알아볼때 25의 제곱근은 5이므로 2 ~ 5까지 나누어 보면 된다.
      즉, 25는  2*12.5 = 25/ 3*8.3 = 25/ 4*6.25 = 25/ 5*5 = 25..... 와 같이 된다.
      즉, 5 이상의 숫자들로 나누면 5 이하의 몫이 나오므로 위에서 실행한 계산이 반복되기 때문에 5보다 큰 숫자로는 나눌 필요가 없다.
      
    
*/


#include<stdio.h>
#include<math.h>

int main()
{
  int a, j;
  
  scanf("%d", &a);
  
  j = 2;
  
  while(1)
  {
    if(j <= sqrt(a))
    {
      if(a % j == 0)
      {
        printf("소수 아님");
        break;
      }
      else
      {
        j++;
      }
    }
    else
    {
      printf("소수");
      break;
    }
  }
}
